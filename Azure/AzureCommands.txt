/*************************************************/
Azure CLI Commands to run from the Cloud Shell: 
/*************************************************/
help
az help
az --version
az storage account list
az vm list-sizes --location "East US"
az vm list-sizes --location "eastus"
az group list

/******************************************************************/
Azure CLI Commands to run from the Windows Commands Processor:
Replace the text within < > with your values
/******************************************************************/
az --version
az login
az group show --resource-group <your resource group name>

az vm create ^
	--resource-group <your resource group name> ^
	--name myVM ^
	--imag win2016datacenter ^
	--admin-username azureuser ^
	--admin-password HappyCloud123
			 
az vm list

az vm delete ^
	--resource-group <resource group where you created the VM> ^
	--name myVM
		 
az vm list

az group create ^
	-l eastus ^
	-n MyResourceGroup

/***************************************************/
Azure PowerShell cmdlets to run from Cloud Shell:
/***************************************************/


Get-Command -Noun AzResourceGroup -Module Az.Resources
Get-AzResourceGroup

/**********************************************************/
Azure PowerShell cmdlets to run from Windows PowerShell:
/**********************************************************/

Get-Module -ListAvailable
Connect-AzAccount

-------------------------------------
    Create a credential for the VM: 
-------------------------------------

$cred = Get-Credential -Message "Enter a username and password for the virtual machine."

---------------------------------------------------------------------------------------
    Create the parameters for the VM. Replace RT###### with your resource group name:
---------------------------------------------------------------------------------------

$vmParams = @{
  ResourceGroupName = 'RT######'
  Name = 'myVM'
  Location = 'eastus' 
  ImageName = 'Win2016Datacenter'
  PublicIpAddressName = 'myNewVMPublicIp'
  Credential = $cred
  OpenPorts = 3389
}

-----------------------------------------------------
    Create a VM using the vmParams created above:
-----------------------------------------------------
$newVM1 = New-AzVM @vmParams

Get-AzVM
Remove-AzVM


/*********************************************************/
NetApp PowerShell cmdlets to run from Windows PowerShell:
/*********************************************************/
Get-Help Connect-NcController



/**************************************************************/
Postman entries for deploying Cloud Volumes ONTAP Single node:
/**************************************************************/
Collection Name:Deploy CVO in Azure



/**************************************************************/
Request #1: To get Access Token

/**************************************************************/
Request name: Get Access Token


Request: POST
Request URL: https://netapp-cloud-account.auth0.com/oauth/token

/--------------------------------------------------------------------------------------------------------/
Note: The following fields in the json body above should be replaced. Please refer to your lab guide.
/--------------------------------------------------------------------------------------------------------/

1. "refresh_token"

 
Request Body (json):
-----------------------
{
"grant_type": "refresh_token",
"refresh_token": "YOUR_REFRESH_TOKEN",
"client_id": "Mu0V1ywgYteI6w1MbD15fKfVIUrNXGWC"
}

Generate refresh token using this link:

https://services.cloud.netapp.com/refresh-token





/**************************************************************/
Request #2a: To deploy CVO Single node

/**************************************************************/

Request name: API to deploy single node CVO


Request: POST
Request URL: https://cloudmanager.cloud.netapp.com/occm/api/azure/vsa/working-environments

Authorization: Bearer Token
Token field: <Ensure Access token from the response to the previous API is used here>  


Headers: 
Key: X-Agent-Id 
Value: the id of the connector from the Cloud Manager UI
       (Refer to the exercise guide for instructions to retrieve this value)

/--------------------------------------------------------------------------------------------------------/
Note: The following fields in the json body below should be updated with your values.
Please refer to your lab guide for instructions.
/--------------------------------------------------------------------------------------------------------/
       1. "tenantId":   <Workspace ID from the Cloud Manager UI
       2. "subnetId": 
       3. "vnetId": 
       4. "subscriptionId": 

Request Body (json):
-----------------------
{
  "name": "CVO1",
  "tenantId": "<workspace id from the cloud manager UI>",
  "region": "eastus",
  "packageName": "azure_custom",
  "dataEncryptionType": "AZURE",
  "capacityTier": "Blob",
  "vsaMetadata": {
    "ontapVersion": "ONTAP-9.8.T1.azure",
    "licenseType": "azure-cot-standard-paygo",
    "instanceType": "Standard_DS4_v2"
  },
  "writingSpeedState": "NORMAL",
  "subnetId": "/subscriptions/<Your SubscriptionID>/resourceGroups/RT#######_CORE/providers/Microsoft.Network/virtualNetworks/Primary-VNet/subnets/BackEnd",
  "svmPassword": "Netapp1!",
  "vnetId": "/subscriptions/<Your SubscriptionID>/resourceGroups/RT#######_CORE/providers/Microsoft.Network/virtualNetworks/Primary-VNet",
  "cidr": "10.2.1.0/24",
  "ontapEncryptionParameters": null,
  "skipSnapshots": false,
 "diskSize": {
    "size": 500,
    "unit": "GB"
  },
  "storageType": "Premium_LRS",
  "azureTags": [],
  "resourceGroup": "RT#######_CVO",
  "allowDeployInExistingRg": true,
  "subscriptionId": "<Your SubscriptionID>",
  "cloudProviderAccount": "ManagedServiceIdentity",
  "enableCompliance": false
}




/**************************************************************/
Request #2b: To deploy CVO HA

/**************************************************************/

Request URL: https://cloudmanager.cloud.netapp.com/occm/api/azure/ha/working-environments






/***************************************************************************************/
Request #3: To be used only when needed to find the supported CVO Single node images

/**************************************************************************************/

Request name: Get valid Single node CVO images
Request description: API request to the Cloud Manager to return all valid Single node image names

Request: GET
Request URL: https://cloudmanager.cloud.netapp.com/occm/api/azure/vsa/metadata/permutations?rgion=eastus

Authorization: Bearer Token
Token field: <Ensure Access token from the response to the previous API is used here>  

Headers: 
Key: X-Agent-id 
Value: <connector id>


/******************************************************************************/
Request #4: To be used only when needed to find the supported CVO HA images

/******************************************************************************/

Request name: Get valid node CVO images
Request description: API request to the Cloud Manager to return all valid HA image names

Request: GET
Request URL: https://cloudmanager.cloud.netapp.com/occm/api/azure/ha/metadata/permutations?rgion=eastus

Authorization: Bearer Token
Token field: <Ensure Access token from the response to the previous API is used here>  

Headers: 
Key: X-Agent-id 
Value: <connector id>
